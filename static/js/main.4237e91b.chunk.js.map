{"version":3,"sources":["components/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodList","state","goods","props","isReversed","sortBy","goodLength","reverse","setState","sortByAlpabet","reset","sortByLength","changeLength","event","value","target","Number","this","copy","filter","good","length","sort","a","b","localeCompare","className","classNames","type","onClick","name","onChange","map","React","Component","goodsFromServer","App","isShown","showGoods","currentTarget","style","display","ReactDOM","render","document","getElementById"],"mappings":"gSAiBaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,YAAK,EAAKC,MAAMD,OACtBE,YAAY,EACZC,OAAQ,GACRC,WAAY,GALhB,EAQEC,QAAU,WACR,EAAKC,UAAS,SAAAP,GAAK,MACjB,CAAEG,YAAaH,EAAMG,gBAV3B,EAcEK,cAAgB,WACd,EAAKD,SAAU,CAAEH,OAAQ,cAf7B,EAkBEK,MAAQ,WACN,EAAKF,SAAS,CACZJ,YAAY,EACZC,OAAQ,GACRC,WAAY,KAtBlB,EA0BEK,aAAe,WACb,EAAKH,SAAS,CAAEH,OAAQ,YA3B5B,EA8BEO,aAAe,SAACC,GACd,IAAQC,EAAUD,EAAME,OAAhBD,MAER,EAAKN,SAAS,CAAEF,WAAYU,OAAOF,MAjCvC,4CAoCE,WAAU,IAAD,OACP,EAKIG,KAAKhB,MAJPG,EADF,EACEA,WACAF,EAFF,EAEEA,MACAG,EAHF,EAGEA,OACAC,EAJF,EAIEA,WAGIY,EAAOhB,EAAMiB,QACjB,SAAAC,GAAI,OAAIA,EAAKC,QAAUf,KAkBzB,OAfAY,EAAKI,MAAK,SAACC,EAAGC,GACZ,OAAQnB,GACN,IAAK,WACH,OAAOkB,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOA,EAAEH,OAASE,EAAEF,OACtB,QACE,OAAO,MAITjB,GACFc,EAAKX,UAIL,sBAAKmB,UAAU,QAAf,UACE,yBACEA,UAAWC,IAAW,MACpB,CAAE,gBAAiBvB,IACrBwB,KAAK,SACLC,QAASZ,KAAKV,QAJhB,gCAOOH,EAPP,QAUA,yBACEsB,UAAWC,IAAW,MACpB,CAAE,gBAA4B,aAAXtB,IACrBuB,KAAK,SACLC,QAASZ,KAAKR,cAJhB,2CAOkB,aAAXJ,EAPP,QAUA,yBACEqB,UAAWC,IAAW,MACpB,CAAE,gBAA4B,WAAXtB,IACrBuB,KAAK,SACLC,QAASZ,KAAKN,aAJhB,sCAOkB,WAAXN,EAPP,QAUA,wBACEqB,UAAU,MACVE,KAAK,SACLC,QAASZ,KAAKP,MAHhB,mBAQA,yBACEoB,KAAK,aACLhB,MAAOR,EACPyB,SAAU,SAAClB,GACT,EAAKD,aAAaC,IAJtB,UAOE,wBAAQC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,mBAGF,oBAAIY,UAAU,cAAd,SACGR,EAAKc,KAAI,SAAAZ,GAAI,OACZ,oBAEEM,UAAU,cAFZ,SAIGN,GAHIA,eA7HnB,GAA8Ba,IAAMC,WCb9BC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJnC,MAAQ,CACNC,MAAOiC,EACPE,SAAS,G,EAGXC,UAAY,YAEP,EADDC,cAIKC,MAAMC,QAAU,OACvB,EAAKjC,SAAS,CAAE6B,SAAS,K,4CAG3B,WAAU,IAAD,OACP,EAA2BpB,KAAKhB,MAAxBoC,EAAR,EAAQA,QAASnC,EAAjB,EAAiBA,MAEjB,OACE,sBAAKwB,UAAU,MAAf,UACE,uCACA,wBACEA,UAAU,MACVE,KAAK,SACLC,QAAS,SAAChB,GAAD,OAAW,EAAKyB,UAAUzB,IAHrC,mBAOCwB,GAAW,cAAC,EAAD,CAAUnC,MAAOA,W,GA5BnB+B,IAAMC,WAkCTE,ICrDfM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4237e91b.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport './GoodList.scss';\n\ntype Props = {\n  goods: string[];\n};\n\ninterface State {\n  goods: string[],\n  isReversed: boolean,\n  sortBy: string,\n  goodLength: number,\n}\n\nexport class GoodList extends React.Component<Props, State> {\n  state = {\n    goods: [...this.props.goods],\n    isReversed: false,\n    sortBy: '',\n    goodLength: 1,\n  };\n\n  reverse = () => {\n    this.setState(state => (\n      { isReversed: !state.isReversed }\n    ));\n  };\n\n  sortByAlpabet = () => {\n    this.setState(({ sortBy: 'alphabet' }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n      goodLength: 1,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  changeLength = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    this.setState({ goodLength: Number(value) });\n  };\n\n  render() {\n    const {\n      isReversed,\n      goods,\n      sortBy,\n      goodLength,\n    } = this.state;\n\n    const copy = goods.filter(\n      good => good.length >= goodLength,\n    );\n\n    copy.sort((a, b) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return a.localeCompare(b);\n        case 'length':\n          return b.length - a.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copy.reverse();\n    }\n\n    return (\n      <div className=\"goods\">\n        <button\n          className={classNames('btn',\n            { 'btn--selected': isReversed })}\n          type=\"button\"\n          onClick={this.reverse}\n        >\n          Reversed\n          {`(${isReversed})`}\n        </button>\n\n        <button\n          className={classNames('btn',\n            { 'btn--selected': sortBy === 'alphabet' })}\n          type=\"button\"\n          onClick={this.sortByAlpabet}\n        >\n          Sort alphabetically\n          {`(${sortBy === 'alphabet'})`}\n        </button>\n\n        <button\n          className={classNames('btn',\n            { 'btn--selected': sortBy === 'length' })}\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          Sort by length\n          {`(${sortBy === 'length'})`}\n        </button>\n\n        <button\n          className=\"btn\"\n          type=\"button\"\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n\n        <select\n          name=\"goodLength\"\n          value={goodLength}\n          onChange={(event) => {\n            this.changeLength(event);\n          }}\n        >\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n          <option value=\"6\">6</option>\n          <option value=\"7\">7</option>\n          <option value=\"8\">8</option>\n          <option value=\"9\">9</option>\n          <option value=\"10\">10</option>\n        </select>\n\n        <ul className=\"goods__list\">\n          {copy.map(good => (\n            <li\n              key={good}\n              className=\"goods__item\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { GoodList } from './components/GoodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: string[],\n  isShown: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    isShown: false,\n  };\n\n  showGoods = (\n    { currentTarget }: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    const target = currentTarget;\n\n    target.style.display = 'none';\n    this.setState({ isShown: true });\n  };\n\n  render() {\n    const { isShown, goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <button\n          className=\"btn\"\n          type=\"button\"\n          onClick={(event) => this.showGoods(event)}\n        >\n          Start\n        </button>\n        {isShown && <GoodList goods={goods} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}